{"version":3,"sources":["logo.svg","SkullReact.js","Components/CustomThemeProvider.js","Components/ThemeSlider.js","Auth/Auth.js","Auth/AuthButtons.js","Auth/SesssionManager.js","App.js","reportWebVitals.js","index.js"],"names":["SkullReact","Check","debug","window","location","hostname","Set","axios","get","backend","withCredentials","then","res","data","final","Test","CustomThemeContext","React","createContext","currentTheme","setTheme","CustomThemeProvider","props","children","localStorage","getItem","useState","themeName","_setThemeName","theme","createTheme","palette","type","primary","main","secondary","contextValue","name","setItem","Provider","value","ThemeProvider","ThemeSlider","dark","setDark","useContext","ThemeIcon","SvgIcon","color","FormGroup","row","Grid","container","direction","alignItems","item","Switch","checked","onChange","e","target","useStyles","makeStyles","root","margin","spacing","textfield","marginBottom","Login","setAuthUser","open","setOpen","email","setEmail","password","setPassword","showPassword","setShowPassword","classes","handleClose","Button","variant","onClick","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","TextField","required","className","label","onInput","fullWidth","FormControl","InputLabel","htmlFor","Input","endAdornment","InputAdornment","position","IconButton","onMouseDown","event","preventDefault","colour","Visibility","VisibilityOff","DialogActions","post","toast","success","catch","err","error","console","log","login","autoFocus","SignUp","fname","setFName","lname","setLName","phone","setPhone","cpassword","setCPassword","setError","errorText","setEText","dis","setDis","handleClickShowPassword","handleMouseDownPassword","useEffect","FormHelperText","telephone","message","disabled","Logout","clear","logout","AuthButtons","isLoggedIn","SessionManager","header","setHeader","setLoggedin","SessionManagerProvider","current","setCurrent","defaults","headers","common","currentLoggin","setCurrentLoggedIn","status","sess","interceptors","response","use","Error","config","url","Copyright","Typography","align","Link","href","Date","getFullYear","display","paddingTop","paddingBottom","title","flexGrow","menuButton","marginRight","box","justifyContent","right","float","App","AppBar","Toolbar","edge","Container","src","logo","style","height","alt","String","Box","pt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","document","ReactDOM","render","StrictMode","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.e1e059e0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.384faaa0.svg\";","import axios from \"axios\";\r\n\r\nconst SkullReact = {\r\n  Check: function DevCheck() {\r\n    var debug = false;\r\n\r\n    if (\r\n      window.location.hostname === \"localhost\" ||\r\n      window.location.hostname === \"127.0.0.1\"\r\n    )\r\n      debug = true;\r\n\r\n    return debug ? \"http://localhost:5000\" : \"\";\r\n  },\r\n  Set: function SetCsrf() {\r\n    const csrf = axios\r\n      .get(backend + `/api/csrf`, { withCredentials: true })\r\n      .then((res) => {\r\n        return res.data[\"X-CSRFToken\"];\r\n      })\r\n      .then((final) => {\r\n        return final;\r\n      });\r\n    return csrf;\r\n  },\r\n  Test: function Test() {\r\n    return axios\r\n      .get(backend + `/api/test`, { withCredentials: true })\r\n      .then((res) => {\r\n        return res;\r\n      });\r\n  },\r\n};\r\n\r\nconst backend = SkullReact.Check();\r\n\r\nexport default SkullReact;\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { createTheme } from \"@material-ui/core\";\r\n\r\nexport const CustomThemeContext = React.createContext({\r\n  currentTheme: \"dark\",\r\n  setTheme: null,\r\n});\r\n\r\nconst CustomThemeProvider = (props) => {\r\n  // eslint-disable-next-line react/prop-types\r\n  const { children } = props;\r\n\r\n  // Read current theme from localStorage or maybe from an api\r\n  const currentTheme = localStorage.getItem(\"appTheme\") || \"dark\";\r\n\r\n  // State to hold the selected theme name\r\n  const [themeName, _setThemeName] = React.useState(currentTheme);\r\n\r\n  // Retrieve the theme object by theme name\r\n  const theme = createTheme({\r\n    palette: {\r\n      type: themeName,\r\n      primary: {\r\n        main: \"#673ab7\",\r\n      },\r\n      secondary: {\r\n        main: \"#00b0ff\",\r\n      },\r\n    },\r\n  });\r\n\r\n  // Wrap _setThemeName to store new theme names in localStorage\r\n  const setThemeName = (name) => {\r\n    localStorage.setItem(\"appTheme\", name);\r\n    _setThemeName(name);\r\n  };\r\n\r\n  const contextValue = {\r\n    currentTheme: themeName,\r\n    setTheme: setThemeName,\r\n  };\r\n\r\n  return (\r\n    <CustomThemeContext.Provider value={contextValue}>\r\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n    </CustomThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CustomThemeProvider;\r\n","import React from \"react\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { CustomThemeContext } from \"./CustomThemeProvider\";\r\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport { SvgIcon } from \"@material-ui/core\";\r\n\r\nexport default function ThemeSlider() {\r\n  const [dark, setDark] = React.useState(true);\r\n  const { setTheme } = React.useContext(CustomThemeContext);\r\n\r\n  const handleChange = (e) => {\r\n    const checked = e.target.checked;\r\n    setDark(checked);\r\n    if (checked) setTheme(\"dark\");\r\n    else setTheme(\"light\");\r\n  };\r\n\r\n  const ThemeIcon = () => {\r\n    if (dark) {\r\n      return (\r\n        <SvgIcon>\r\n          <NightsStayIcon color=\"primary\" />\r\n        </SvgIcon>\r\n      );\r\n    } else {\r\n      return (\r\n        <SvgIcon>\r\n          <Brightness7Icon color=\"secondary\" />\r\n        </SvgIcon>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <Grid container direction=\"row\" alignItems=\"center\">\r\n        <Grid item>\r\n          <Switch\r\n            checked={dark}\r\n            onChange={handleChange}\r\n            name=\"ThemeSlider\"\r\n            color=\"primary\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <ThemeIcon />\r\n        </Grid>\r\n      </Grid>\r\n    </FormGroup>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport SkullReact from \"../SkullReact\";\r\n\r\nconst backend = SkullReact.Check();\r\n\r\nexport function login(data, setAuthUser) {\r\n  return axios\r\n    .post(backend + `/api/auth/login`, data, {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      toast.success(\"You have been logged in, \" + res.data.name);\r\n      setAuthUser(true);\r\n    })\r\n    .catch((err) => {\r\n      toast.error(\"Ohh no something went wrong\");\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nexport function logout(setAuthUser) {\r\n  return axios\r\n    .get(backend + `/api/auth/logout`, {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      toast.success(res.data.message);\r\n      setAuthUser(false);\r\n      localStorage.clear();\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      toast.error(\"Ohh no something went wrong\");\r\n      console.log(err);\r\n    });\r\n}\r\nexport function createAccount(data) {\r\n  return axios\r\n    .post(backend + `/api/auth/create`, data, {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      toast.success(res.data.message);\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      toast.error(\"Ohh no something went wrong\");\r\n      console.log(err);\r\n    });\r\n}\r\nexport function checkLoggedIn() {\r\n  return axios\r\n    .get(backend + \"/api/check\", {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      return res.data;\r\n    })\r\n    .catch((err) => {\r\n      toast.error(\"Ohh no something went wrong\");\r\n      console.log(err);\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  InputAdornment,\r\n  IconButton,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { login, logout, createAccount } from \"../Auth/Auth\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  textfield: {\r\n    marginBottom: \"10px\",\r\n  },\r\n}));\r\n\r\nfunction Login({ setAuthUser }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleSignIn = (event) => {\r\n    event.preventDefault();\r\n    login({ email: email, password: password }, setAuthUser);\r\n  };\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n        Login\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"Login-Form\">\r\n        <DialogTitle id=\"Login-Form\">Login</DialogTitle>\r\n        <form>\r\n          <DialogContent>\r\n            <DialogContentText>Sign in here!</DialogContentText>\r\n            <TextField\r\n              required\r\n              className={classes.textfield}\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onInput={(e) => setEmail(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <FormControl required fullWidth className={classes.textfield}>\r\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n              <Input\r\n                id=\"password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      colour=\"secondary\"\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleSignIn}\r\n              type=\"submit\"\r\n              color=\"secondary\"\r\n              autoFocus={true}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction SignUp() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [fname, setFName] = React.useState(\"\");\r\n  const [lname, setLName] = React.useState(\"\");\r\n  const [phone, setPhone] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [cpassword, setCPassword] = React.useState(\"\");\r\n  const [error, setError] = React.useState(false);\r\n  const [errorText, setEText] = React.useState(\"\");\r\n  const [dis, setDis] = React.useState(true);\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setDis(true);\r\n    setEmail(\"\");\r\n    setFName(\"\");\r\n    setLName(\"\");\r\n    setPhone(\"\");\r\n    setPassword(\"\");\r\n    setCPassword(\"\");\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (password === cpassword) {\r\n      setError(false);\r\n      setEText(\"\");\r\n      setDis(false);\r\n    } else {\r\n      setError(true);\r\n      setEText(\"Passwords do not match\");\r\n      setDis(true);\r\n    }\r\n  }, [password, cpassword]);\r\n\r\n  const handleCreateAC = (event) => {\r\n    event.preventDefault();\r\n    createAccount({\r\n      email: email,\r\n      fname: fname,\r\n      lname: lname,\r\n      password: password,\r\n      telephone: phone,\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n        Sign up\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Create Account</DialogTitle>\r\n        <form>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              If you dont have an account, you can create one here\r\n            </DialogContentText>\r\n            <TextField\r\n              className={classes.textfield}\r\n              required\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onInput={(e) => setEmail(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              className={classes.textfield}\r\n              required\r\n              label=\"First Name\"\r\n              type=\"text\"\r\n              onInput={(e) => setFName(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              className={classes.textfield}\r\n              required\r\n              label=\"Last Name\"\r\n              value={lname}\r\n              onInput={(e) => setLName(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              className={classes.textfield}\r\n              required\r\n              label=\"Phone Number\"\r\n              value={phone}\r\n              onInput={(e) => setPhone(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <FormControl\r\n              required\r\n              fullWidth\r\n              error={error}\r\n              className={classes.textfield}\r\n            >\r\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n              <Input\r\n                id=\"password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      colour=\"secondary\"\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n            <FormControl\r\n              required\r\n              fullWidth\r\n              error={error}\r\n              className={classes.textfield}\r\n            >\r\n              <InputLabel htmlFor=\"Confrim-Password\">\r\n                Confrim Password\r\n              </InputLabel>\r\n              <Input\r\n                id=\"Confrim-Password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                value={cpassword}\r\n                onChange={(e) => setCPassword(e.target.value)}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      colour=\"secondary\"\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n              {error ? <FormHelperText>{errorText}</FormHelperText> : null}\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleCreateAC}\r\n              type=\"submit\"\r\n              color=\"secondary\"\r\n              autoFocus={true}\r\n              disabled={dis}\r\n            >\r\n              Create Account\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Logout({ setAuthUser }) {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      onClick={() => logout(setAuthUser)}\r\n    >\r\n      Logout\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction AuthButtons({ isLoggedIn, setAuthUser }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <FormGroup row className={classes.root}>\r\n      {isLoggedIn ? (\r\n        <Logout setAuthUser={setAuthUser} />\r\n      ) : (\r\n        <>\r\n          <SignUp />\r\n          <Login setAuthUser={setAuthUser} />\r\n        </>\r\n      )}\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default AuthButtons;\r\n","import React from \"react\";\r\nimport SkullReact from \"../SkullReact\";\r\nimport axios from \"axios\";\r\nimport { checkLoggedIn } from \"./Auth\";\r\n\r\nexport const SessionManager = React.createContext({\r\n  isLoggedIn: false,\r\n  header: \"\",\r\n  setHeader: null,\r\n  setLoggedin: null,\r\n});\r\n\r\nconst SessionManagerProvider = (props) => {\r\n  // eslint-disable-next-line react/prop-types\r\n  const { children } = props;\r\n\r\n  // State to hold the selected header name\r\n  const [current, setCurrent] = React.useState(\"\");\r\n\r\n  if (!localStorage.getItem(\"X-CSRFToken\"))\r\n    SkullReact.Set().then((data) => {\r\n      setCurrent(data);\r\n      localStorage.setItem(\"X-CSRFToken\", current);\r\n    });\r\n\r\n  axios.defaults.headers.common[\"X-CSRFToken\"] = current;\r\n  localStorage.setItem(\"X-CSRFToken\", current);\r\n\r\n  // Wrap setHeader to store new header names in localStorage\r\n  const setHeader = (header) => {\r\n    setCurrent(header);\r\n  };\r\n\r\n  const [currentLoggin, setCurrentLoggedIn] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    checkLoggedIn().then((data) => {\r\n      setCurrentLoggedIn(data.status);\r\n      if (!data.sess) {\r\n        SkullReact.Set().then((data) => {\r\n          setCurrent(data);\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  const setLoggedin = (status) => {\r\n    setCurrentLoggedIn(status);\r\n  };\r\n\r\n  const contextValue = {\r\n    isLoggedIn: currentLoggin,\r\n    header: current,\r\n    setHeader: setHeader,\r\n    setLoggedin: setLoggedin,\r\n  };\r\n\r\n  axios.interceptors.response.use(\r\n    (res) => res,\r\n    (err) => {\r\n      if (err.response.status === 400) {\r\n        SkullReact.Set().then((data) => {\r\n          setCurrent(data);\r\n        });\r\n        throw new Error(`${err.config.url} not found`);\r\n      }\r\n      throw err;\r\n    }\r\n  );\r\n\r\n  return (\r\n    <SessionManager.Provider value={contextValue}>\r\n      {children}\r\n    </SessionManager.Provider>\r\n  );\r\n};\r\n\r\nexport default SessionManagerProvider;\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport SkullReact from \"./SkullReact\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Link,\r\n  Box,\r\n  Button,\r\n  FormGroup,\r\n  AppBar,\r\n  IconButton,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ThemeSlider from \"./Components/ThemeSlider\";\r\nimport AuthButtons from \"./Auth/AuthButtons\";\r\nimport { SessionManager } from \"./Auth/SesssionManager\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Skulldorom/Template\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  box: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  right: {\r\n    float: \"right\",\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const { isLoggedIn, setLoggedin } = React.useContext(SessionManager);\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" color=\"transparent\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Template\r\n          </Typography>\r\n          <FormGroup row className={classes.right}>\r\n            <ThemeSlider />\r\n            <AuthButtons isLoggedIn={isLoggedIn} setAuthUser={setLoggedin} />\r\n          </FormGroup>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container className={classes.container}>\r\n        <Typography variant=\"body1\" color=\"primary\" align=\"center\">\r\n          <img src={logo} style={{ height: \"300px\" }} alt=\"logo\" />\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"primary\" align=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={() => SkullReact.Test()}\r\n          >\r\n            Test (Prints in the backend)\r\n          </Button>\r\n        </Typography>\r\n        <br />\r\n        <br />\r\n        <Typography variant=\"h3\" color=\"primary\" align=\"center\">\r\n          Logged in? {String(isLoggedIn)}\r\n        </Typography>\r\n      </Container>\r\n      <Box pt={4}>\r\n        <Copyright />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n// styling\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport CustomThemeProvider from \"./Components/CustomThemeProvider\";\r\nimport SessionManagerProvider from \"./Auth/SesssionManager\";\r\n\r\ndocument.title = \"Flask React\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <SessionManagerProvider>\r\n      <CustomThemeProvider>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <CssBaseline />\r\n        <App />\r\n      </CustomThemeProvider>\r\n    </SessionManagerProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}