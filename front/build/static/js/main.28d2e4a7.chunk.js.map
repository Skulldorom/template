{"version":3,"sources":["logo.svg","SkullReact.js","Components/CustomThemeProvider.js","Components/ThemeSlider.js","Auth/Auth.js","Auth/AuthButtons.js","Auth/SesssionManager.js","App.js","reportWebVitals.js","index.js"],"names":["SkullReact","Check","debug","window","location","hostname","Set","axios","get","backend","withCredentials","then","res","data","final","Test","CustomThemeContext","React","createContext","currentTheme","setTheme","CustomThemeProvider","props","children","localStorage","getItem","useState","themeName","_setThemeName","theme","createTheme","palette","type","primary","main","secondary","contextValue","name","setItem","Provider","value","ThemeProvider","ThemeSlider","dark","setDark","useContext","ThemeIcon","SvgIcon","color","FormGroup","row","Grid","container","direction","alignItems","item","Switch","checked","onChange","e","target","Login","setAuthUser","open","setOpen","email","setEmail","password","setPassword","handleClose","Button","variant","onClick","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","TextField","required","label","onInput","fullWidth","DialogActions","event","preventDefault","post","toast","success","catch","err","error","console","log","login","autoFocus","SignUp","fname","setFName","lname","setLName","phone","setPhone","cpassword","setCPassword","setError","errorText","setEText","dis","setDis","useEffect","helperText","telephone","message","disabled","Logout","clear","logout","useStyles","makeStyles","root","margin","spacing","AuthButtons","isLoggedIn","classes","className","SessionManager","header","setHeader","setLoggedin","SessionManagerProvider","current","setCurrent","defaults","headers","common","currentLoggin","setCurrentLoggedIn","status","sess","Copyright","Typography","align","Link","href","Date","getFullYear","display","paddingTop","paddingBottom","title","flexGrow","menuButton","marginRight","box","justifyContent","right","float","App","AppBar","position","Toolbar","IconButton","edge","Container","src","logo","style","height","alt","String","Box","pt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","document","ReactDOM","render","StrictMode","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.28d2e4a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.384faaa0.svg\";","import axios from \"axios\";\r\n\r\nconst SkullReact = {\r\n  Check: function DevCheck() {\r\n    var debug = false;\r\n\r\n    if (\r\n      window.location.hostname === \"localhost\" ||\r\n      window.location.hostname === \"127.0.0.1\"\r\n    )\r\n      debug = true;\r\n\r\n    return debug ? \"http://localhost:5000\" : \"\";\r\n  },\r\n  Set: function SetCsrf() {\r\n    const csrf = axios\r\n      .get(backend + `/api/csrf`, { withCredentials: true })\r\n      .then((res) => {\r\n        return res.data[\"X-CSRFToken\"];\r\n      })\r\n      .then((final) => {\r\n        return final;\r\n      });\r\n    return csrf;\r\n  },\r\n  Test: function Test() {\r\n    return axios\r\n      .get(backend + `/api/test`, { withCredentials: true })\r\n      .then((res) => {\r\n        return res;\r\n      });\r\n  },\r\n};\r\n\r\nconst backend = SkullReact.Check();\r\n\r\nexport default SkullReact;\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { createTheme } from \"@material-ui/core\";\r\n\r\nexport const CustomThemeContext = React.createContext({\r\n  currentTheme: \"dark\",\r\n  setTheme: null,\r\n});\r\n\r\nconst CustomThemeProvider = (props) => {\r\n  // eslint-disable-next-line react/prop-types\r\n  const { children } = props;\r\n\r\n  // Read current theme from localStorage or maybe from an api\r\n  const currentTheme = localStorage.getItem(\"appTheme\") || \"dark\";\r\n\r\n  // State to hold the selected theme name\r\n  const [themeName, _setThemeName] = React.useState(currentTheme);\r\n\r\n  // Retrieve the theme object by theme name\r\n  const theme = createTheme({\r\n    palette: {\r\n      type: themeName,\r\n      primary: {\r\n        main: \"#673ab7\",\r\n      },\r\n      secondary: {\r\n        main: \"#00b0ff\",\r\n      },\r\n    },\r\n  });\r\n\r\n  // Wrap _setThemeName to store new theme names in localStorage\r\n  const setThemeName = (name) => {\r\n    localStorage.setItem(\"appTheme\", name);\r\n    _setThemeName(name);\r\n  };\r\n\r\n  const contextValue = {\r\n    currentTheme: themeName,\r\n    setTheme: setThemeName,\r\n  };\r\n\r\n  return (\r\n    <CustomThemeContext.Provider value={contextValue}>\r\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n    </CustomThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CustomThemeProvider;\r\n","import React from \"react\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { CustomThemeContext } from \"./CustomThemeProvider\";\r\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport { SvgIcon } from \"@material-ui/core\";\r\n\r\nexport default function ThemeSlider() {\r\n  const [dark, setDark] = React.useState(true);\r\n  const { setTheme } = React.useContext(CustomThemeContext);\r\n\r\n  const handleChange = (e) => {\r\n    const checked = e.target.checked;\r\n    setDark(checked);\r\n    if (checked) setTheme(\"dark\");\r\n    else setTheme(\"light\");\r\n  };\r\n\r\n  const ThemeIcon = () => {\r\n    if (dark) {\r\n      return (\r\n        <SvgIcon>\r\n          <NightsStayIcon color=\"primary\" />\r\n        </SvgIcon>\r\n      );\r\n    } else {\r\n      return (\r\n        <SvgIcon>\r\n          <Brightness7Icon color=\"secondary\" />\r\n        </SvgIcon>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <Grid container direction=\"row\" alignItems=\"center\">\r\n        <Grid item>\r\n          <Switch\r\n            checked={dark}\r\n            onChange={handleChange}\r\n            name=\"ThemeSlider\"\r\n            color=\"primary\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <ThemeIcon />\r\n        </Grid>\r\n      </Grid>\r\n    </FormGroup>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport SkullReact from \"../SkullReact\";\r\n\r\nconst backend = SkullReact.Check();\r\n\r\nexport function login(data, setAuthUser) {\r\n  return axios\r\n    .post(backend + `/api/auth/login`, data, {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      toast.success(\"You have been logged in, \" + res.data.name);\r\n      setAuthUser(true);\r\n    })\r\n    .catch((err) => {\r\n      toast.error(\"Ohh no something went wrong\");\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nexport function logout(setAuthUser) {\r\n  return axios\r\n    .get(backend + `/api/auth/logout`, {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      toast.success(res.data.message);\r\n      setAuthUser(false);\r\n      localStorage.clear();\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      toast.error(\"Ohh no something went wrong\");\r\n      console.log(err);\r\n    });\r\n}\r\nexport function createAccount(data) {\r\n  return axios\r\n    .post(backend + `/api/auth/create`, data, {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      toast.success(res.data.message);\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      toast.error(\"Ohh no something went wrong\");\r\n      console.log(err);\r\n    });\r\n}\r\nexport function checkLoggedIn() {\r\n  return axios\r\n    .get(backend + \"/api/check\", {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      return res.data;\r\n    })\r\n    .catch((err) => {\r\n      toast.error(\"Ohh no something went wrong\");\r\n      console.log(err);\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { login, logout, createAccount } from \"../Auth/Auth\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Login({ setAuthUser }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const handleSignIn = (event) => {\r\n    event.preventDefault();\r\n    login({ email: email, password: password }, setAuthUser);\r\n  };\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n        Login\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"Login-Form\">\r\n        <DialogTitle id=\"Login-Form\">Login</DialogTitle>\r\n        <form>\r\n          <DialogContent>\r\n            <DialogContentText>Sign in here!</DialogContentText>\r\n            <TextField\r\n              required\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onInput={(e) => setEmail(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onInput={(e) => setPassword(e.target.value)}\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleSignIn}\r\n              type=\"submit\"\r\n              color=\"secondary\"\r\n              autoFocus={true}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction SignUp() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [fname, setFName] = React.useState(\"\");\r\n  const [lname, setLName] = React.useState(\"\");\r\n  const [phone, setPhone] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [cpassword, setCPassword] = React.useState(\"\");\r\n  const [error, setError] = React.useState(false);\r\n  const [errorText, setEText] = React.useState(\"\");\r\n  const [dis, setDis] = React.useState(true);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setDis(true);\r\n    setEmail(\"\");\r\n    setFName(\"\");\r\n    setLName(\"\");\r\n    setPhone(\"\");\r\n    setPassword(\"\");\r\n    setCPassword(\"\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (password === cpassword && password !== \"\") {\r\n      setError(false);\r\n      setEText(\"\");\r\n      setDis(false);\r\n    } else {\r\n      setError(true);\r\n      setEText(\"Passwords do not match\");\r\n      setDis(true);\r\n    }\r\n  }, [password, cpassword]);\r\n\r\n  const handleCreateAC = (event) => {\r\n    event.preventDefault();\r\n    createAccount({\r\n      email: email,\r\n      fname: fname,\r\n      lname: lname,\r\n      password: password,\r\n      telephone: phone,\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n        Sign up\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Create Account</DialogTitle>\r\n        <form>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              If you dont have an account, you can create one here\r\n            </DialogContentText>\r\n            <TextField\r\n              required\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onInput={(e) => setEmail(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"First Name\"\r\n              type=\"text\"\r\n              onInput={(e) => setFName(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"Last Name\"\r\n              value={lname}\r\n              onInput={(e) => setLName(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"Phone Number\"\r\n              value={phone}\r\n              onInput={(e) => setPhone(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onInput={(e) => setPassword(e.target.value)}\r\n              fullWidth\r\n              error={error}\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"Confrim Password\"\r\n              type=\"password\"\r\n              value={cpassword}\r\n              onInput={(e) => setCPassword(e.target.value)}\r\n              fullWidth\r\n              error={error}\r\n              helperText={errorText}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleCreateAC}\r\n              type=\"submit\"\r\n              color=\"secondary\"\r\n              autoFocus={true}\r\n              disabled={dis}\r\n            >\r\n              Create Account\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Logout({ setAuthUser }) {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      onClick={() => logout(setAuthUser)}\r\n    >\r\n      Logout\r\n    </Button>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction AuthButtons({ isLoggedIn, setAuthUser }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <FormGroup row className={classes.root}>\r\n      {isLoggedIn ? (\r\n        <Logout setAuthUser={setAuthUser} />\r\n      ) : (\r\n        <>\r\n          <SignUp />\r\n          <Login setAuthUser={setAuthUser} />\r\n        </>\r\n      )}\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default AuthButtons;\r\n","import React from \"react\";\r\nimport SkullReact from \"../SkullReact\";\r\nimport axios from \"axios\";\r\nimport { checkLoggedIn } from \"./Auth\";\r\n\r\nexport const SessionManager = React.createContext({\r\n  isLoggedIn: false,\r\n  header: \"\",\r\n  setHeader: null,\r\n  setLoggedin: null,\r\n});\r\n\r\nconst SessionManagerProvider = (props) => {\r\n  // eslint-disable-next-line react/prop-types\r\n  const { children } = props;\r\n\r\n  // State to hold the selected header name\r\n  const [current, setCurrent] = React.useState(\"\");\r\n\r\n  if (!localStorage.getItem(\"X-CSRFToken\"))\r\n    SkullReact.Set().then((data) => {\r\n      setCurrent(data);\r\n      localStorage.setItem(\"X-CSRFToken\", current);\r\n    });\r\n\r\n  axios.defaults.headers.common[\"X-CSRFToken\"] = current;\r\n  localStorage.setItem(\"X-CSRFToken\", current);\r\n\r\n  // Wrap setHeader to store new header names in localStorage\r\n  const setHeader = (header) => {\r\n    setCurrent(header);\r\n  };\r\n\r\n  const [currentLoggin, setCurrentLoggedIn] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    checkLoggedIn().then((data) => {\r\n      setCurrentLoggedIn(data.status);\r\n      if (!data.sess) {\r\n        SkullReact.Set().then((data) => {\r\n          setCurrent(data);\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  const setLoggedin = (status) => {\r\n    setCurrentLoggedIn(status);\r\n  };\r\n\r\n  const contextValue = {\r\n    isLoggedIn: currentLoggin,\r\n    header: current,\r\n    setHeader: setHeader,\r\n    setLoggedin: setLoggedin,\r\n  };\r\n\r\n  return (\r\n    <SessionManager.Provider value={contextValue}>\r\n      {children}\r\n    </SessionManager.Provider>\r\n  );\r\n};\r\n\r\nexport default SessionManagerProvider;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport SkullReact from \"./SkullReact\";\nimport {\n  Container,\n  Typography,\n  Link,\n  Box,\n  Button,\n  FormGroup,\n  AppBar,\n  IconButton,\n  Toolbar,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ThemeSlider from \"./Components/ThemeSlider\";\nimport AuthButtons from \"./Auth/AuthButtons\";\nimport { SessionManager } from \"./Auth/SesssionManager\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"/\">\n        Skulldorom/Template\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  box: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  right: {\n    float: \"right\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const { isLoggedIn, setLoggedin } = React.useContext(SessionManager);\n  return (\n    <>\n      <AppBar position=\"static\" color=\"transparent\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Template\n          </Typography>\n          <FormGroup row className={classes.right}>\n            <ThemeSlider />\n            <AuthButtons isLoggedIn={isLoggedIn} setAuthUser={setLoggedin} />\n          </FormGroup>\n        </Toolbar>\n      </AppBar>\n      <Container className={classes.container}>\n        <Typography variant=\"body1\" color=\"primary\" align=\"center\">\n          <img src={logo} style={{ height: \"300px\" }} alt=\"logo\" />\n        </Typography>\n        <Typography variant=\"body1\" color=\"primary\" align=\"center\">\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => SkullReact.Test()}\n          >\n            Test (Prints in the backend)\n          </Button>\n        </Typography>\n        <br />\n        <br />\n        <Typography variant=\"h3\" color=\"primary\" align=\"center\">\n          Logged in? {String(isLoggedIn)}\n        </Typography>\n      </Container>\n      <Box pt={4}>\n        <Copyright />\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// styling\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport CustomThemeProvider from \"./Components/CustomThemeProvider\";\nimport SessionManagerProvider from \"./Auth/SesssionManager\";\n\ndocument.title = \"Flask React\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SessionManagerProvider>\n      <CustomThemeProvider>\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n        <CssBaseline />\n        <App />\n      </CustomThemeProvider>\n    </SessionManagerProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}