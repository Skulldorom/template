{"version":3,"sources":["SkullReact.js","SessionManager.js","Auth/Auth.js","logo.svg","Components/CustomThemeProvider.js","Components/ThemeSlider.js","Auth/AuthButtons.js","App.js","reportWebVitals.js","index.js"],"names":["SkullReact","Check","debug","window","location","hostname","Set","axios","get","backend","withCredentials","then","res","data","final","Test","StartSession","localStorage","getItem","token","defaults","headers","common","setItem","SessionManager","React","createContext","isLoggedIn","header","CustomThemeContext","currentTheme","setTheme","CustomThemeProvider","props","children","useState","themeName","_setThemeName","theme","createTheme","palette","type","primary","main","secondary","contextValue","name","Provider","value","ThemeProvider","ThemeSlider","dark","setDark","useContext","ThemeIcon","SvgIcon","color","FormGroup","row","Grid","container","direction","alignItems","item","Switch","checked","onChange","e","target","Login","setAuthUser","Button","variant","onClick","post","toast","success","catch","err","error","console","log","login","email","password","SignUp","message","Logout","clear","logout","useStyles","makeStyles","root","margin","spacing","AuthButtons","classes","className","Copyright","Typography","align","Link","href","Date","getFullYear","display","paddingTop","paddingBottom","box","justifyContent","App","authUser","status","Consumer","Container","maxWidth","src","logo","style","height","alt","String","Box","pt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","document","title","ReactDOM","render","StrictMode","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.ec6c44d2.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst SkullReact = {\r\n  Check: function DevCheck() {\r\n    var debug = false;\r\n\r\n    if (\r\n      window.location.hostname === \"localhost\" ||\r\n      window.location.hostname === \"127.0.0.1\"\r\n    )\r\n      debug = true;\r\n\r\n    return debug ? \"http://localhost:5000\" : \"\";\r\n  },\r\n  Set: function SetCsrf() {\r\n    const csrf = axios\r\n      .get(backend + `/api/csrf`, { withCredentials: true })\r\n      .then((res) => {\r\n        return res.data[\"X-CSRFToken\"];\r\n      })\r\n      .then((final) => {\r\n        return final;\r\n      });\r\n    return csrf;\r\n  },\r\n  Test: function Test() {\r\n    return axios\r\n      .get(backend + `/api/test`, { withCredentials: true })\r\n      .then((res) => {\r\n        return res;\r\n      });\r\n  },\r\n};\r\n\r\nconst backend = SkullReact.Check();\r\n\r\nexport default SkullReact;\r\n","import React from \"react\";\r\nimport SkullReact from \"./SkullReact\";\r\nimport axios from \"axios\";\r\n\r\nfunction StartSession() {\r\n  if (localStorage.getItem(\"X-CSRFToken\")) {\r\n    const token = localStorage.getItem(\"X-CSRFToken\");\r\n    axios.defaults.headers.common[\"X-CSRFToken\"] = token;\r\n    return { \"X-CSRFToken\": token };\r\n  } else {\r\n    return SkullReact.Set().then((data) => {\r\n      localStorage.setItem(\"X-CSRFToken\", data);\r\n      axios.defaults.headers.common[\"X-CSRFToken\"] = data;\r\n      return { \"X-CSRFToken\": data };\r\n    });\r\n  }\r\n}\r\n\r\nconst SessionManager = React.createContext({\r\n  isLoggedIn: false,\r\n  header: \"\",\r\n});\r\n\r\nexport { SessionManager, StartSession };\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport SkullReact from \"../SkullReact\";\r\n\r\nconst backend = SkullReact.Check();\r\n\r\nexport function login(data, setAuthUser) {\r\n  return axios\r\n    .post(backend + `/api/auth/login`, data, {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      toast.success(\"You have been logged in, \" + res.data.name);\r\n      setAuthUser(true);\r\n      localStorage.setItem(\"isLoggedin\", true);\r\n    })\r\n    .catch((err) => {\r\n      toast.error(\"Ohh no something went wrong\");\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nexport function logout(setAuthUser) {\r\n  return axios\r\n    .get(backend + `/api/auth/logout`, {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      toast.success(res.data.message);\r\n      setAuthUser(false);\r\n      localStorage.clear();\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      toast.error(\"Ohh no something went wrong\");\r\n      console.log(err);\r\n    });\r\n}\r\nexport function createAccount(data) {\r\n  return axios\r\n    .post(backend + `/api/auth/create`, data, {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      toast.success(res.data.message);\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      toast.error(\"Ohh no something went wrong\");\r\n      console.log(err);\r\n    });\r\n}\r\nexport function checkLoggedIn() {\r\n  return axios\r\n    .get(backend + \"/api/check\", {\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      return res.data.status;\r\n    })\r\n    .catch((err) => {\r\n      toast.error(\"Ohh no something went wrong\");\r\n      console.log(err);\r\n    });\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.384faaa0.svg\";","import React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { createTheme } from \"@material-ui/core\";\r\n\r\nexport const CustomThemeContext = React.createContext({\r\n  currentTheme: \"dark\",\r\n  setTheme: null,\r\n});\r\n\r\nconst CustomThemeProvider = (props) => {\r\n  // eslint-disable-next-line react/prop-types\r\n  const { children } = props;\r\n\r\n  // Read current theme from localStorage or maybe from an api\r\n  const currentTheme = localStorage.getItem(\"appTheme\") || \"dark\";\r\n\r\n  // State to hold the selected theme name\r\n  const [themeName, _setThemeName] = React.useState(currentTheme);\r\n\r\n  // Retrieve the theme object by theme name\r\n  const theme = createTheme({\r\n    palette: {\r\n      type: themeName,\r\n      primary: {\r\n        main: \"#673ab7\",\r\n      },\r\n      secondary: {\r\n        main: \"#00b0ff\",\r\n      },\r\n    },\r\n  });\r\n\r\n  // Wrap _setThemeName to store new theme names in localStorage\r\n  const setThemeName = (name) => {\r\n    localStorage.setItem(\"appTheme\", name);\r\n    _setThemeName(name);\r\n  };\r\n\r\n  const contextValue = {\r\n    currentTheme: themeName,\r\n    setTheme: setThemeName,\r\n  };\r\n\r\n  return (\r\n    <CustomThemeContext.Provider value={contextValue}>\r\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n    </CustomThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CustomThemeProvider;\r\n","import React from \"react\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { CustomThemeContext } from \"./CustomThemeProvider\";\r\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport { SvgIcon } from \"@material-ui/core\";\r\n\r\nexport default function ThemeSlider() {\r\n  const [dark, setDark] = React.useState(true);\r\n  const { setTheme } = React.useContext(CustomThemeContext);\r\n\r\n  const handleChange = (e) => {\r\n    const checked = e.target.checked;\r\n    setDark(checked);\r\n    if (checked) setTheme(\"dark\");\r\n    else setTheme(\"light\");\r\n  };\r\n\r\n  const ThemeIcon = () => {\r\n    if (dark) {\r\n      return (\r\n        <SvgIcon>\r\n          <NightsStayIcon color=\"primary\" />\r\n        </SvgIcon>\r\n      );\r\n    } else {\r\n      return (\r\n        <SvgIcon>\r\n          <Brightness7Icon color=\"secondary\" />\r\n        </SvgIcon>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <Grid container direction=\"row\" alignItems=\"center\">\r\n        <Grid item>\r\n          <Switch\r\n            checked={dark}\r\n            onChange={handleChange}\r\n            name=\"ThemeSlider\"\r\n            color=\"primary\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <ThemeIcon />\r\n        </Grid>\r\n      </Grid>\r\n    </FormGroup>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, FormGroup } from \"@material-ui/core\";\r\nimport { login, logout, createAccount } from \"../Auth/Auth\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Login({ setAuthUser }) {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      onClick={() => login({ email: \"test\", password: \"test\" }, setAuthUser)}\r\n    >\r\n      Login\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction SignUp() {\r\n  return (\r\n    <Button\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      onClick={() => createAccount({})}\r\n    >\r\n      Sign Up\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction Logout({ setAuthUser }) {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      onClick={() => logout(setAuthUser)}\r\n    >\r\n      Logout\r\n    </Button>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction AuthButtons({ isLoggedIn, setAuthUser }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <FormGroup row className={classes.root}>\r\n      {isLoggedIn ? (\r\n        <Logout setAuthUser={setAuthUser} />\r\n      ) : (\r\n        <>\r\n          <SignUp />\r\n          <Login setAuthUser={setAuthUser} />\r\n        </>\r\n      )}\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default AuthButtons;\r\n","import React from \"react\";\nimport { SessionManager, StartSession } from \"./SessionManager\";\nimport { checkLoggedIn } from \"./Auth/Auth\";\nimport logo from \"./logo.svg\";\nimport SkullReact from \"./SkullReact\";\nimport {\n  Container,\n  Typography,\n  Link,\n  Box,\n  Button,\n  FormGroup,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ThemeSlider from \"./Components/ThemeSlider\";\nimport AuthButtons from \"./Auth/AuthButtons\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"/\">\n        Skulldorom/Template\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  box: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nfunction App() {\n  const [authUser, setAuthUser] = React.useState(false);\n  checkLoggedIn().then((data) => setAuthUser(data));\n\n  const classes = useStyles();\n\n  return (\n    <SessionManager.Provider\n      value={{\n        header: StartSession(),\n        isLoggedIn: authUser,\n      }}\n    >\n      <SessionManager.Consumer>\n        {({ isLoggedIn }) => (\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Typography variant=\"body1\" color=\"primary\" align=\"center\">\n              <img src={logo} style={{ height: \"300px\" }} alt=\"logo\" />\n            </Typography>\n            <FormGroup row>\n              <ThemeSlider />\n              <AuthButtons isLoggedIn={isLoggedIn} setAuthUser={setAuthUser} />\n            </FormGroup>\n\n            <Typography variant=\"body1\" color=\"primary\" align=\"center\">\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                onClick={() => SkullReact.Test()}\n              >\n                Test (Prints in the backend)\n              </Button>\n            </Typography>\n            <br />\n            <br />\n            <Typography variant=\"h3\" color=\"primary\" align=\"center\">\n              Logged in? {String(isLoggedIn)}\n            </Typography>\n          </Container>\n        )}\n      </SessionManager.Consumer>\n      <Box pt={4}>\n        <Copyright />\n      </Box>\n    </SessionManager.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// styling\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport CustomThemeProvider from \"./Components/CustomThemeProvider\";\n\ndocument.title = \"Flask React\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CustomThemeProvider>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <CssBaseline />\n      <App />\n    </CustomThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}